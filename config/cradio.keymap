
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


#define BASE 0
#define NAVIGATION 1
#define MOUSE 2
#define SYMBOLS 3
#define NUMBERS 4

&mmv {
	time-to-max-speed-ms = <300>;
};

&mwh {
	acceleration-exponent=<1>;
};

&mt {
	tapping-term-ms = <600>;
	flavor = "tap-preferred";
};


/ { 
 /* ================== COMBOS =========================*/

 combos {
   compatible = "zmk,combos";
 
 /* 
   ╭───────────────────────╮ ╭───────────────────────╮
   │   .   .   .   .   .   │ │   .   .   .   .   .   │
   │   .   [TAB][WIN]  .   │ │   .   [ESC][MEH]  .   │
   │   .   .   .   .   .   │ │   .   .   .   .   .   │
   ╰───────────╮   .   .   │ │   .   .   ╭───────────╯
               ╰───────────╯ ╰───────────╯
*/

   combo_tab {
     timeout-ms = <27>;
     key-positions = <11 12>;
     bindings = <&kp TAB>;
   };

   combo_gui {
     timeout-ms = <27>;
     key-positions = <12 13>;
     bindings = <&kp LGUI>;
   };

   combo_esc {
     timeout-ms = <27>;
     key-positions = <16 17>;
     bindings = <&kp ESC>;
   };

   combo_meh {
     timeout-ms = <27>;
     key-positions = <17 18>;
     bindings = <&kp LA(RS(LS(P)))>;
   };


 };

behaviors {

   open_symbol: td_open {
     compatible = "zmk,behavior-tap-dance";
     label = "TD_OPEN";
     #binding-cells = <0>;
     tapping-term-ms = <200>;
     bindings = <&kp LEFT_BRACE>, <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>, <&kp LT>;
   };

   close_symbol: td_close {
     compatible = "zmk,behavior-tap-dance";
     label = "TD_CLOSE";
     #binding-cells = <0>;
     tapping-term-ms = <200>;
     bindings = <&kp RIGHT_BRACE>, <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACKET>, <&kp GT>;
   };

   dot_dot: dot_dot {
     compatible = "zmk,behavior-tap-dance";
     label = "DOT_DOT";
     #binding-cells = <0>;
     tapping-term-ms = <200>;
     bindings = <&kp PERIOD>, <&kp COLON>;
  };

   comma_comma: comma_comma {
     compatible = "zmk,behavior-tap-dance";
     label = "DOT_DOT";
     #binding-cells = <0>;
     tapping-term-ms = <200>;
     bindings = <&kp COMMA>, <&kp SEMICOLON>;
   };

 };

        keymap {
                compatible = "zmk,keymap";
                
			 /*                    BASE 
			 base layer contains autoshift on alpha chars
			 ╭──────────────────────╮ ╭──────────────────────╮
			 │   Q   W   E   R   T  │ │   Y   U   I   O   P  │
			 │   A   S   D   F   G  │ │   H   J   K   L   RET│
			 │   Z   X   C   V   B  │ │   N   M   ,   .   BS │
			 ╰───────────╮   CTL SP │ │   NV  MOU╭───────────╯
			             ╰──────────╯ ╰──────────╯ 
		         */

			 Base_layer {
			   bindings = <
			     &mt RS(Q) Q      &mt RS(W) W    &mt RS(E) E    &mt RS(R) R    &mt RS(T) T         &mt RS(Y) Y     &mt RS(U) U    &mt RS(I) I    &mt RS(O) O   &mt RS(P) P 
			     &mt RS(A) A      &mt RS(S) S    &mt RS(D) D    &mt RS(F) F    &mt RS(G) G         &mt RS(H) H     &mt RS(J) J    &mt RS(K) K    &mt RS(L) L   &lt SYMBOLS RETURN 
			     &mt RS(Z) Z      &mt RS(X) X    &mt RS(C) C    &mt RS(V) V    &mt RS(B) B         &mt RS(N) N     &mt RS(M) M    &comma_comma   &dot_dot      &kp LALT
			     &sk LEFT_CONTROL &lt NUMBERS SPACE                                                &lt MOUSE SPACE &lt NAVIGATION BSPC
			   >;
			 };
			 
			 
			 /*                       MOUSE AND MEDIA CONTROL
			 ╭──────────────────────────────────────────╮ ╭───────────────────────────────────╮
			 │      .      LFTCL UP    RGTCL     .      │ │ VOLU SCRU SCRD SCRD    .    .     │
			 │      .      LEFT  DOWN  RIGHT     .      │ │ VOLD MO1  MO2  MO3     .    .     │
			 │      .      .     PAGEB PAGEF     .      │ │ MUTE PAGU PAGD .       .    .     │
			 ╰────────────────╮  LFTCL RGTCL     .      │ │                 ╭─────────────────╯
			                  ╰─────────────────────────╯ ╰─────────────────╯ 
			*/
			
		           Mouse_layer {
			     bindings = <
			     &none     &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &none         &kp K_VOLUME_UP   &mwh SCROLL_UP  &mwh SCROLL_DOWN  &mwh SCROLL_DOWN &kp BSPC
			     &trans    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none         &kp K_VOLUME_DOWN &kp LC(F13)     &kp LC(F14)       &kp LC(F15)      &kp RETURN
			     &trans    &none          &kp LA(LEFT)   &kp LA(RIGHT)   &none         &kp K_MUTE        &kp LC(PAGE_UP) &kp LC(PAGE_DOWN) &none            &trans 
			     &mkp LCLK &mkp RCLK &none &none 
			   >;
			 };

			 /*                         NAVIGATION AND MODIFIERS
			 ╭─────────────────────────────────────╮ ╭─────────────────────────────────────╮
			 │     .     PAGDW  UP     PAGUP .     │ │     .     HOME     END   END  .     │
			 │     TAB   LEFT   DOWN   RIGHT .     │ │     .     LSHFT    LCTRL LALT LGUI  │
			 │     LSHFT .      .      .     .     │ │     DEL   INST     .     .    .     │
			 ╰───────────────────────╮ LALT  LGUI  │ │     .     .     ╭───────────────────╯
			                         ╰─────────────╯ ╰─────────────────╯ 
			*/
			
			   Navigation_layer {
			     bindings = <
			       &trans         &kp PAGE_DOWN &kp UP     &kp PAGE_UP  &none            &none    &kp HOME       &kp END          &kp END    &none
			       &kp TAB        &kp LEFT      &kp DOWN   &kp RIGHT    &none            &none    &sk LEFT_SHIFT &sk LEFT_CONTROL &sk LALT   &sk LGUI
			       &kp LEFT_SHIFT &none         &none      &none        &none            &kp DEL  &kp INSERT     &none            &none      &none 
			       &kp LEFT_ALT   &kp LEFT_GUI                                           &none    &none 
			     >;
			 };

	
			 /*                         SYMBOLS AND MODIFIERS
			 ╭──────────────────────────────────╮ ╭──────────────────────────────────╮
			 │     '     "     \     Blash │    │ │     ¨     <     >     (     )    │
			 │     ~     ?     ^     .     \    │ │     ({    })    _-    =+    .    │
			 │     .     .     .     .     .    │ │     .     .     .     .     .    │ 
			 ╰────────────────╮      .     .  │ │ .     .     .     ╭────────────────╯
			                  ╰─────────────────╯ ╰─────────────────╯ 
			*/
			
			   Symbols_layer {
			     bindings = <
			       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp SLASH   &kp BACKSLASH   &kp PIPE             &kp CARET   &kp LT     &kp GT          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS 
			       &kp TILDE         &kp RA(W)          &kp GRAVE   &none           &kp SLASH            &kp PIPE    &kp RA(W)  &mt UNDER MINUS &mt EQUAL PLUS        &none 
			       &none             &none              &none       &none           &kp BACKSLASH        &none       &kp LT     &kp GT          &kp LT                &kp GT 
			       &none             &none                                                               &none       &none 
			    >;
			 };

			 /* FUNCTION, SIMBOLS AND NUMBERS
			    ╭────────────────────────────╮ ╭───────────────────────────────╮
			    │     1!   2@   3#   4$  5%  │ │    6¨   7&   8*    9(   0)    │
			    │     ~    ?    ^    .   \   │ │    CAPS .    .     F1   F12   │
			    │     F2   F3   F4   F5  F6  │ │    F7   F8   F9    F10  F11   │
			    ╰────────────────╮   .   .   │ │    .    .    ╭────────────────╯
			                     ╰───────────╯ ╰──────────────╯ 
			*/
			
			  Numbers_layer {
			    bindings = <
			      &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4   &mt PERCENT NUMBER_5           &mt CARET NUMBER_6   &mt AMPERSAND NUMBER_7  &mt ASTERISK NUMBER_8   &mt LEFT_PARENTHESIS NUMBER_9  &mt RIGHT_PARENTHESIS NUMBER_0 
			      &kp TILDE                 &kp RA(W)             &kp GRAVE          &sk LEFT_SHIFT        &kp SLASH                      &kp CAPS             &open_symbol            &close_symbol           &kp F1                         &kp F12 
			      &kp F2                    &kp F3                &kp LA(F4)         &kp LC(F5)            &kp F6                         &kp F7               &kp F8                  &kp F9                  &kp F10                        &kp F11	
			      &none                     &none                                                                                         &none                &none 
			 >;
			 };


        
	};
};
